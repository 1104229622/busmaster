<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
	<HEAD>
		<TITLE>Introduction</TITLE>
		<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
	</HEAD>
	<BODY BGCOLOR="#ffffff" TEXT="#000000">
		<OBJECT type="application/x-oleobject" classid="clsid:1e2a7bd0-dab9-11d0-b93a-00c04fc99f9e">
			<PARAM NAME="Keyword" VALUE="Introduction">
		</OBJECT>
		<H1>
			<TABLE style="WIDTH: 722px" cellSpacing="2" cellPadding="5" width="722" bgColor="#ffffff"
				border="0">
				<TR>
					<TD align="left" bgColor="#ccccff">
						<P align="center"><FONT face="Arial" color="red" size="5"><STRONG>Introduction</STRONG></FONT></P>
					</TD>
				</TR>
				<TR>
					<TD align="left" bgColor="#eeeeff"><FONT face="Arial">
							<P><STRONG><FONT size="2">BUSMASTER Overview</FONT></STRONG></P>
							<P><FONT size="2"> BUSMASTER is a user friendly and cost effective testing and development 
									tool for CAN bus systems that runs on Windows 2000 and Windows XP. It helps in 
									monitoring, analyzing and simulation of CAN messages the bus. Using its 
									powerful functions and user-programmability one can simulate CAN system of any 
									complexity. </FONT>
							</P>
							<P><FONT size="2"> Additionally it provides options to analyze data bytes in raw data 
									format or logical/physical data format and signals can be monitored separately. 
									These two functionality is achieved using a message database. An in-built 
									database editor is provided to create message databases.</FONT></P>
							<P><FONT size="2"> The user can simulate a CAN node’s behavior or enhance the 
									functionality of BUSMASTER. This is done by means of 32 bit windows Dynamic Link 
									Library (DLL). . A DLL containing BUSMASTER interface can be loaded dynamically to 
									simulate the node’s behavior. An in-built Function editor is provided to write 
									program in ANSI C and build a DLL. Once DLL is generated, it can be loaded and 
									used dynamically.. </FONT>
							</P>
							<P><FONT size="2"> There are many others features that can be used without any 
									programming. The key such features are</FONT>
								<UL>
									<LI>
										<FONT size="2">Display of messages,</FONT>
									<LI>
										<FONT size="2">Message information and Interpretation,</FONT>
									<LI>
										<FONT size="2">Filters,</FONT>
									<LI>
										<FONT size="2">Logging,</FONT>
									<LI>
										<FONT size="2">Replaying logged messages,</FONT>
									<LI>
										<FONT size="2">Network statistics,</FONT>
									<LI>
										<FONT size="2">Different time stamping,</FONT>
									<LI>
										<FONT size="2">interactive transmission of message blocks,</FONT>
									<LI>
										<FONT size="2">Signal watch etc.</FONT></LI></UL>
							<P><FONT size="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; To facilitate the user 
									programming a comprehensive set of APIs and event handlers are provided. </FONT>
							</P>
							<P>
							<P><FONT size="2"></FONT></P>
							<FONT size="2"><STRONG>Key Features</STRONG></FONT> </P>
							<UL>
								<LI>
									<FONT size="2">Using USB port multiple USB CAN hardware can be connected and 
										monitored with multiple instances of BUSMASTER application.</FONT>
								<LI>
									<FONT size="2">It operates in Active mode.&nbsp;In active mode the tool influences 
										the bus. In passive mode the tool does not have any influence on the bus. </FONT>
								<LI>
									<FONT size="2">It supports CAN 2.0A and 2.0B protocol.</FONT>
								<LI>
									<FONT size="2">The messages can be displayed in decimal or hexadecimal format.</FONT>
								<LI>
									<FONT size="2">There are three different time stampings namely system time, 
										relative time and absolute time mode. The absolute time is the time from when 
										tool is connected to CAN bus. The relative time is time between two consecutive 
										messages if the display is configured in scroll mode. In overwrite mode it is 
										the time difference between two messages of same ID. Time stamping is done at 
										CAN driver level. The system time is PCs real time value. </FONT>
								<LI>
									<FONT size="2">User can log messages to a file and replay the logged file. The time 
										stamping mode can be also be configured in System, Relative and Absolute mode 
										during logging. The replay can be selectively done for transmitted, received 
										and all messages. More then one logging session with same time stamping can be 
										combined in a single replay session. The replay can also be configured in a 
										cyclic manner with different time delay.</FONT>
								<LI>
									<FONT size="2">The message filtering can be done through Software, hardware or 
										both. Software filter works at application level while hardware filter works at 
										CAN controller level.</FONT>
								<LI>
									<FONT size="2">It supports transmission of message blocks in single shot or 
										periodic mode with time/key trigger.</FONT>
								<LI>
									<FONT size="2">It can display messages and error frames on CAN bus.</FONT>
								<LI>
									<FONT size="2">User can configure acceptance filter, baud rate and warning limit. 
										Warning limit is not supported currently by BUSMASTER with USB interface.</FONT>
								<LI>
									<FONT size="2">Message display can be configured in different colours. Different 
										colours can be assigned to different message IDs. Message display entries and 
										the display update rate can be configured.</FONT>
								<LI>
									<FONT size="2">It provides a message database editor for creating &amp; editing of 
										messages and its signals.</FONT>
								<LI>
									<FONT size="2">The signals of message can be interpreted. It can be interpreted in 
										a separate window or on message display window.</FONT>
								<LI>
									<FONT size="2">Signals alone can be monitored separately with time stamping.</FONT>
								<LI>
									<FONT size="2">It provides programming facility through Function editor. The 
										event-based programming is done using ANSI C language. The user can use all 
										windows provided APIs and any third party LIB/DLL/API files.</FONT>
								<LI>
									<FONT size="2">It supports all bit rates up to 1 MBPS.</FONT>
								<LI>
									<FONT size="2">User can analyse of bus statistics.</FONT>
								<LI>
									<FONT size="2">User preferences can be saved or loaded. The last saved user 
										preferences are loaded automatically at the start of application.</FONT></LI></UL>
						</FONT>
					</TD>
				</TR>
			</TABLE>
		</H1>
	</BODY>
</HTML>
