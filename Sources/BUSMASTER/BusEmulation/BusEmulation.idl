// BusEmulation.idl : IDL source for BusEmulation
//

// This file will be processed by the MIDL tool to
// produce the type library (BusEmulation.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";


[
	object,
	uuid(7AC5B5FB-4427-40BA-83B4-7E450C8AE73A),	dual,
	nonextensible,
	helpstring("ISimENG Interface"),
	pointer_default(unique)
]
interface ISimENG : IDispatch{
    [id(1), helpstring("method SendMessage")] HRESULT SendMessage([in] USHORT ClientID, [in] USHORT CurrDataLength, [in] BYTE pbCurrDataByte[128]);
    [id(2), helpstring("method RegisterClient")] HRESULT RegisterClient([in] USHORT Bus, [in] USHORT MaxDataLen, [out] USHORT* ClientID, [out] BSTR* PipeName, [out] BSTR* EventName);
    [id(3), helpstring("method UnregisterClient")] HRESULT UnregisterClient([in] USHORT ClientID);
    [id(4), helpstring("method ConnectNode")] HRESULT ConnectNode([in] USHORT ClientID);
    [id(5), helpstring("method DisconnectNode")] HRESULT DisconnectNode([in] USHORT ClientID);
    [id(6), helpstring("method GetTimeModeMapping")] HRESULT GetTimeModeMapping([out] SYSTEMTIME* CurrSysTime, [out] ULONGLONG* TimeStamp, [out]LARGE_INTEGER* lQueryTickCount);
    [id(7), helpstring("method GetCurrentStatus")] HRESULT GetCurrentStatus([in] USHORT ClientID, [in,out] VARIANT *pNodeStatus);
};
[
	uuid(FB7AE001-2BB2-4155-8194-99C5E0032068),	version(1.1),
	helpstring("BusEmulation 1.1 Type Library")
]
library BusEmulationLib
{
	importlib("stdole2.tlb");
	[
		uuid(C8224CA9-5DC9-435E-B198-12AD414CBAEC),
		helpstring("SimENG Class")
	]
	coclass SimENG
	{
		[default] interface ISimENG;
	};
};
